name: github-with-helm-release
on:
  workflow_call:
    inputs: 
      updateImageTags:
        type: boolean
        required: false
      updateChartVersion:
        type: boolean
        required: false
    secrets:
      GH_ORG_TOKEN:
        required: true

jobs:

  github-with-helm-release:
    name: Github Release w/ Helm
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: write

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: downcase REPO
      run: |
        echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
        echo "PREVIOUS_RELEASE=`git describe --tags --abbrev=0`" >>${GITHUB_ENV} 

    - name: debug
      run: |
        echo "The value of REPO is: ${{ env.REPO }}"
        echo "The value of PREVIOUS_RELEASE is: ${{ env.PREVIOUS_RELEASE }}"

    - name: Application Version
      id: version
      uses: paulhatch/semantic-version@v4.0.3
      with:
        major_pattern: "BREAKING CHANGE"
        minor_pattern: "feat:"
        bump_each_commit: true

    - name: Build Changelog
      if: env.previousRelease
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update version in helm values
      if: inputs.updateImageTags
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.image.tag = "${{ steps.version.outputs.version_tag }}"' helm/values.yaml
    
    - name: Update version in helm chart
      if: inputs.updateChartVersion
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.version = "${{ steps.version.outputs.version_tag }}"' helm/Chart.yaml

    - name: Commit changes
      if: inputs.updateChartVersion || inputs.updateImageTags
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -am "chore: set version to ${{ steps.version.outputs.version_tag }}"
        git tag -a ${{ steps.version.outputs.version_tag }} -m "${{ steps.version.outputs.version_tag }}"
    
    - name: Push to tag
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_ORG_TOKEN }}
        branch: ${{ steps.version.outputs.version_tag }}
        tags: true

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version_tag }}
        generate_release_notes: true
        body: ${{steps.changelog.outputs.changelog}}